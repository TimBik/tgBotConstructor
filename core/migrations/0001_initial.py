# Generated by Django 5.1.2 on 2024-10-16 18:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tg_id', models.BigIntegerField(unique=True, verbose_name='id из тг')),
                ('role', models.CharField(choices=[('AUTHORIZED', 'Authorized'), ('ADMIN', 'Admin'), ('ANONIM', 'Anonim')], default='ANONIM', max_length=20, verbose_name='роль пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BotMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.message')),
                ('text', models.TextField(default='', max_length=2048, verbose_name='текст')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='images/bot_messages')),
                ('file', models.FileField(blank=True, default=None, null=True, upload_to='files/bot_messages')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='создано')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='обновлено')),
            ],
            options={
                'verbose_name': 'сообщение бота',
                'verbose_name_plural': 'сообщения бота',
            },
            bases=('core.message',),
        ),
        migrations.CreateModel(
            name='InlineMessage',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.message')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/inline_messages')),
                ('created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='создано')),
                ('modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='обновлено')),
            ],
            options={
                'verbose_name': 'инлайн сообщение бота',
                'verbose_name_plural': 'инлайн сообщения бота',
            },
            bases=('core.message',),
        ),
        migrations.CreateModel(
            name='TgEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('START', 'Start event')], default=None, max_length=20, null=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='core.message')),
            ],
        ),
        migrations.CreateModel(
            name='InlineButton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=64)),
                ('type', models.CharField(blank=True, choices=[('NEXT_INLINE_MESSAGE', 'Next Inline Message'), ('NEXT_BOT_MESSAGE', 'Next Bot Message')], max_length=64, null=True)),
                ('inline_message', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.inlinemessage')),
            ],
            options={
                'verbose_name': 'инлайн кнопка',
                'verbose_name_plural': 'инлайн кнопки',
            },
        ),
    ]
